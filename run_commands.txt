
use --help or -h as an argument for any code when running to see all possible arguments
can remove or add parameters as needed

---------------------------------------------------------------------------------------------------

GENERATE A SINGLE PNG OF A MARKER:

python generate_aruco_tags.py --id {INTEGER} --type {STRING} --output {PATH} --size {INTEGER}

EXAMPLE: python generate_aruco_tags.py --id 24 --type DICT_5X5_100 -o tags/

PARAMETERS:
-o, --output | (REQUIRED) path to output folder 
-i, --id | (REQUIRED)  id of ArUco tag to generate
-t, --type | type of ArUco tag to generate, see utils.py for full dictionary (default='DICT_ARUCO_ORIGINAL')
-s, --size | size of ArUco tag to generate

---------------------------------------------------------------------------------------------------

MARKER DETECTION FOR IMAGES:

python detect_aruco_images.py  --image {PATH} --type {STRING}

EXAMPLE: python detect_aruco_images.py --image Images/test_image_1.png --type DICT_5X5_100

PARAMETERS:
-i, --image | (REQUIRED) path to input image
-t, --type | type of ArUco tag to generate, see utils.py for full dictionary (default='DICT_ARUCO_ORIGINAL') 

---------------------------------------------------------------------------------------------------

MARKER DETECTION FOR PRE-RECORDED VIDEOS OR LIVE CAMERA FEED:

python detect_aruco_video.py --type {STRING} --camera {BOOL} --video {PATH}

EXAMPLE: python detect_aruco_video.py --type DICT_5X5_100 --camera False --video test_video.mp4

PARAMETERS:
-i, --camera | (REQUIRED) boolean to check for live camera feed, true if live camera feed
-v, --video, | path to video file if applicable
-t, --type | type of ArUco tag to detect, see utils.py for full dictionary (default='DICT_ARUCO_ORIGINAL')

---------------------------------------------------------------------------------------------------

FOR CALIBRATION

python calibration.py --dir {PATH} --width {INTEGER} --height {INTEGER} --square_size {FLOAT} --visualize

EXAMPLE: python calibration.py --dir calibration_checkerboard/ --visualize

PARAMETERS:
-d, --dir | (REQUIRED) path to folder with calibration images
-w, --width | number of internal corners along width of checkerboard (default=7)
-t, --height | number of internal corners along height of checkerboard (default=5)
-s, square_size | length of one whole checkerboard square (meteres) (default=0.031)
-v, --visualize | visualize calibration for each image, enter --visualize for true, remove for false

---------------------------------------------------------------------------------------------------

FOR POSE ESTIMATION

python pose_estimation.py --K_Matrix {PATH} --D_Coeff {PATH} --type {STRING} --length {FLOAT}

EXAMPLE: python pose_estimation.py --K_Matrix calibration_matrix.npy --D_Coeff distortion_coefficients.npy --type DICT_5X5_100

PARAMETERS:
-k, --K_Matrix | (REQUIRED) path to intrinsic camera matrix numpy file
-d, --D_Coeff | (REQUIRED)  path to distortion matrix numpy file
-t, --type | type of ArUco tag to detect, see utils.py for full dictionary (default='DICT_ARUCO_ORIGINAL')
-l, --length | length of one ArUco tag (default=0.015)

---------------------------------------------------------------------------------------------------

FOR VISUALIZING THE POSE DATA 

python visualization.py --dir {PATH} --mrk {INTEGER}

EXAMPLE: python visualization.py --dir transformations_2024-07-31_17-59-31.hdf5 --mrk 1

PARAMETERS
-d, --dir | (REQUIRED)  PATH TO HDF5 FILE
-m, --mrk | (REQUIRED)  ID OF MARKER YOU WANT TO SEE POSE DATA OF 




